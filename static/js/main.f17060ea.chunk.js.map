{"version":3,"sources":["assets/me.jpg","assets/daniel.jpg","assets/filipez.jpg","assets/pp.jpg","assets/sasa.jpg","assets/Logo.svg","assets/techdojo.svg","assets/becca.jpg","assets/jonathas.jpg","components/ServerName/styles.ts","components/ServerName/index.tsx","components/ServerList/styles.ts","components/ServerButton/styles.ts","components/ServerButton/index.tsx","components/ServerList/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelTextButton/styles.ts","components/ChannelTextButton/index.tsx","components/ChannelVoiceButton/styles.ts","components/ChannelVoiceButton/index.tsx","components/ChannelList/styles.ts","components/ChannelList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/ChannelData/styles.ts","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/index.tsx","components/Layout/styles.ts","components/Layout/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["module","exports","Container","styled","div","Title","h1","ExpandIcon","ExpandMore","ServerName","Separator","Button","button","props","isHome","hasNotifications","mentions","ServerButton","selected","isTechDojo","className","src","Logo","alt","techdojo","ServerList","HashtagIcon","Hashtag","Description","span","ChannelInfo","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelTextButton","VolumeUp","channelName","Volume","ChannelVoiceButton","Category","AddCategoryIcon","Add","ChannelList","Profile","Avatar","me","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","Role","User","UserRow","nickname","isBot","isMari","isDaniel","isFilipez","isJunio","isSasa","isBecca","isJonathas","isOnline","isOcupado","isAusente","daniel","filipez","junio","sasa","becca","jonathas","id","UserList","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMentionMe","hasMention","ChannelData","type","placeholder","Grid","Layout","createGlobalStyle","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f17060ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.0e3591f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/daniel.55a1f6f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/filipez.ae7020fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pp.e79735f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sasa.cba66d3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.3fbf5a84.svg\";","module.exports = __webpack_public_path__ + \"static/media/techdojo.7cc4a229.svg\";","module.exports = __webpack_public_path__ + \"static/media/becca.0a3498ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jonathas.8fe26068.jpg\";","import styled from \"styled-components\";\r\nimport { ExpandMore } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    background-color: var(--secondary);\r\n    padding: 0 11px 0 16px;\r\n\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`;\r\nexport const Title = styled.h1`\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    color: white;\r\n`;\r\nexport const ExpandIcon = styled(ExpandMore)`\r\n    width: 28px;\r\n    height: 28px;\r\n\r\n    color: white;\r\n    cursor: pointer;\r\n`;","import React from   'react';\r\nimport { Container, Title, ExpandIcon } from './styles';\r\n\r\nexport const ServerName: React.FC = () => {\r\n    return (\r\n        <Container>\r\n        <Title>Tech Dojo</Title>\r\n        <ExpandIcon />\r\n        </ Container>\r\n    );\r\n};\r\n\r\nexport default ServerName;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    grid-area: SL;\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 11px 0;\r\n    max-height: 100vh;\r\n    overflow-y: scroll;\r\n\r\n    background-color: var(--tertiary);\r\n\r\n    ::-webkit-scrollbar {\r\n    width: 6px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n    background-color: var(--quaternary);\r\n    border-radius: 4px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n    background-color: var(--tertiary);\r\n    }\r\n`;\r\nexport const Separator = styled.div `\r\n    width: 32px;\r\n    border-bottom: 2px solid var(--quaternary);\r\n\r\n    margin-bottom: 8px;\r\n`;","import styled from \"styled-components\";\r\nimport { Props } from './index';\r\n\r\nexport const Button = styled.button<Props>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n\r\n    width: 48px;\r\n    height: 48px;\r\n\r\n    margin-bottom: 8px;\r\n    border-radius: 50%;\r\n\r\n    background-color: ${(props) =>\r\n    props.isHome ? 'var(--rocketseat)' : 'var(--primary)'};\r\n    background-size: cover;\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    >img {\r\n        width: ${(props) => props.isHome ? '30px' : '48px'};\r\n        height: ${(props) => props.isHome ? '30px' : '48px'};\r\n        border-radius: ${(props) => props.isHome ? '' : '50%'};\r\n        transition: border-radius .2s;\r\n    }\r\n    >img:hover {\r\n        border-radius: 4px;\r\n    }\r\n\r\n    &::before {\r\n        width: 9px;\r\n        height: 9px;\r\n        position: absolute;\r\n        left: -17px;\r\n        top: calc(50% - 4.5px);\r\n\r\n        background-color: var(--white);\r\n        border-radius: 50%;\r\n\r\n        content: '';\r\n        display: ${(props) => (props.hasNotifications ? 'inline' : 'none')};\r\n    }\r\n\r\n    &::after {\r\n        background-color: var(--notification);\r\n        width: auto;\r\n        height: 16px;\r\n        padding: 0 4px;\r\n        position: absolute;\r\n        bottom: -4px;\r\n        right: -4px;\r\n\r\n        border-radius: 12px;\r\n        border: 3.2px solid var(--quaternary);\r\n\r\n        text-align: right;\r\n        font-size: 13px;\r\n        font-weight: bold;\r\n        color: var(--white);\r\n\r\n        content: '${props => props.mentions && props.mentions}';\r\n        display: ${props => props.mentions && props.mentions > 0 ? 'inline' : 'none'}\r\n    }\r\n\r\n    transition: border-radius .2s, background-color .2s;\r\n    &.active, \r\n    &:hover {\r\n        border-radius: 16px;\r\n        background-color: ${props => props.isHome ? 'var(--rocketseat)' : 'var(--discord)'}\r\n    }\r\n`;","import React from 'react';\r\nimport { Button } from './styles';\r\nimport Logo from '../../assets/Logo.svg';\r\nimport techdojo from '../../assets/techdojo.svg';\r\n\r\nexport interface Props {\r\n    selected?: boolean;\r\n    isHome?: boolean;\r\n    hasNotifications?: boolean;\r\n    mentions?: number;\r\n    isTechDojo?: boolean;\r\n};\r\n\r\nconst ServerButton: React.FC<Props> = ({\r\n    selected,\r\n    isHome,\r\n    hasNotifications,\r\n    mentions,\r\n    isTechDojo\r\n}) => {\r\n    return (\r\n        <Button\r\n            isHome={isHome}\r\n            hasNotifications={hasNotifications}\r\n            mentions={mentions}\r\n            isTechDojo={isTechDojo}\r\n            className={selected ? 'active' : ''}\r\n        >\r\n            {isHome && <img src={Logo} alt=\"rocketseat\" />}\r\n            {isTechDojo && <img src={techdojo} alt=\"TechDojo\" />}\r\n        </Button>\r\n    )\r\n};\r\n\r\nexport default ServerButton;","import React from 'react';\r\nimport { Container, Separator } from './styles';\r\nimport ServerButton from '../ServerButton';\r\n\r\nconst ServerList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <ServerButton isHome />\r\n            <Separator />\r\n            <ServerButton isTechDojo/>\r\n            <ServerButton hasNotifications />\r\n            <ServerButton mentions={5} hasNotifications/>\r\n            <ServerButton />\r\n            <ServerButton mentions={3} />\r\n            <ServerButton />\r\n            <ServerButton />\r\n            <ServerButton />\r\n            <ServerButton />\r\n            <ServerButton />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ServerList;","import styled from \"styled-components\";\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CI;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    background-color: var(--primary);\r\n    padding: 0 17px;\r\n\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`;\r\nexport const HashtagIcon = styled(Hashtag)`\r\n    width: 24px;\r\n    height: 24px;\r\n\r\n    color: var(--symbol);\r\n\r\n`;\r\nexport const Title = styled.h1`\r\n    margin-left: 9px;\r\n\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n\r\n    color: white;\r\n`;\r\nexport const Separator = styled.div`\r\n    height: 24px;\r\n    width: 1px;\r\n\r\n    background-color: white;\r\n    opacity: 0.2;\r\n\r\n    margin: 0 13px;\r\n`;\r\nexport const Description = styled.span`\r\n    font-size: 15px;\r\n    color: var(--gray);\r\n`;","import React from   'react';\r\nimport  { Container, HashtagIcon, Title, Separator, Description } from './styles';\r\n\r\nexport const ChannelInfo: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <HashtagIcon />\r\n            <Title>chat-livre</Title>\r\n            <Separator />\r\n            <Description>Canal aberto para conversas</Description>\r\n        </ Container>\r\n    );\r\n};\r\n\r\nexport default ChannelInfo;","import styled from \"styled-components\";\r\nimport { PersonAdd, Settings } from 'styled-icons/material';\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\nimport { VolumeUp } from 'styled-icons/fa-solid';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n  justify-content: space-between;\r\n\r\n    cursor: pointer;\r\n    padding: 5px 3px;\r\n    border-radius: 5px;\r\n\r\n    background-color: transparent;\r\n    transition: background-color .2s;\r\n\r\n    >div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    >div span {\r\n        font-size: 15px;\r\n        color: var(--senary);\r\n    }\r\n\r\n    &:hover, \r\n    &.active {\r\n        background-color: var(--quinary);\r\n        \r\n        >div span {\r\n            color: var(--white);\r\n        }\r\n\r\n        > div:nth-child(2) svg {\r\n            display: inherit;\r\n        }\r\n    }\r\n    > div:nth-child(2) svg {\r\n            display: none;\r\n        }\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    color: var(--symbol);\r\n`;\r\nexport const InviteIcon = styled(PersonAdd)`\r\n    width: 16px;\r\n    height: 16px;\r\n\r\n    color: var(--symbol);\r\n\r\n    cursor: pointer;\r\n    transition: color .2s;\r\n\r\n    &:hover {\r\n        color: var(--white);\r\n    }\r\n`;\r\nexport const SettingsIcon = styled(Settings)`\r\n    width: 16px;\r\n    height: 16px;\r\n    margin-left: 4px;\r\n\r\n    color: var(--symbol);\r\n\r\n    cursor: pointer;\r\n    transition: color .2s;\r\n\r\n    &:hover {\r\n    color: var(--white);\r\n    }\r\n`;\r\nexport const Volume = styled(VolumeUp)`\r\n    width: 24px;\r\n    height: 24px;\r\n\r\n    color: var(--symbol);\r\n\r\n`;","import React from   'react';\r\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './styles';\r\n\r\nexport interface Props {\r\n    channelName: string;\r\n    selected?: boolean;\r\n    isHome?: boolean;\r\n}\r\n\r\nexport const ChannelTextButton: React.FC<Props> = ({\r\n    channelName,\r\n    selected,\r\n    isHome   \r\n}) => {\r\n    return (\r\n        <Container className={selected ? 'active' : ''}>\r\n        <div>\r\n            <HashtagIcon />\r\n            <span>{channelName}</span>\r\n        </div>\r\n        <div>\r\n            <InviteIcon />\r\n            <SettingsIcon />   \r\n        </div>\r\n        </ Container>\r\n    );\r\n};\r\n\r\nexport default ChannelTextButton;","import styled from \"styled-components\";\r\nimport { PersonAdd, Settings } from 'styled-icons/material';\r\nimport { VolumeUp } from 'styled-icons/fa-solid';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n  justify-content: space-between;\r\n\r\n    cursor: pointer;\r\n    padding: 5px 3px;\r\n    border-radius: 5px;\r\n\r\n    background-color: transparent;\r\n    transition: background-color .2s;\r\n\r\n    >div {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    >div span {\r\n        font-size: 15px;\r\n        color: var(--senary);\r\n    }\r\n\r\n    &:hover, \r\n    &.active {\r\n        background-color: var(--quinary);\r\n        \r\n        >div span {\r\n            color: var(--white);\r\n        }\r\n\r\n        > div:nth-child(2) svg {\r\n            display: inherit;\r\n        }\r\n    }\r\n    > div:nth-child(2) svg {\r\n            display: none;\r\n        }\r\n`;\r\n\r\nexport const Volume = styled(VolumeUp)`\r\n    width: 18px;\r\n    height: 18px;\r\n    margin-right: 7px;\r\n\r\n    color: var(--symbol);\r\n\r\n`;\r\nexport const InviteIcon = styled(PersonAdd)`\r\n    width: 16px;\r\n    height: 16px;\r\n\r\n    color: var(--symbol);\r\n\r\n    cursor: pointer;\r\n    transition: color .2s;\r\n\r\n    &:hover {\r\n        color: var(--white);\r\n    }\r\n`;\r\nexport const SettingsIcon = styled(Settings)`\r\n    width: 16px;\r\n    height: 16px;\r\n    margin-left: 4px;\r\n\r\n    color: var(--symbol);\r\n\r\n    cursor: pointer;\r\n    transition: color .2s;\r\n\r\n    &:hover {\r\n    color: var(--white);\r\n    }\r\n`;","import React from   'react';\r\nimport { Container, Volume, InviteIcon, SettingsIcon } from './styles';\r\n\r\nexport interface Props {\r\n    channelName: string;\r\n    selected?: boolean;\r\n    isHome?: boolean;\r\n}\r\n\r\nexport const ChannelVoiceButton: React.FC<Props> = ({\r\n    channelName,\r\n    selected,\r\n    isHome   \r\n}) => {\r\n    return (\r\n        <Container className={selected ? 'active' : ''}>\r\n        <div>\r\n            <Volume />\r\n            <span>{channelName}</span>\r\n        </div>\r\n        <div>\r\n            <InviteIcon />\r\n            <SettingsIcon />   \r\n        </div>\r\n        </ Container>\r\n    );\r\n};\r\n\r\nexport default ChannelVoiceButton;","import styled from \"styled-components\";\r\nimport { Add } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CL;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    padding: 0px 10px;\r\n    background-color: var(--secondary);\r\n`;\r\n\r\nexport const Category = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: 20px;\r\n    margin-bottom: 6px;\r\n\r\n    > span {\r\n        text-transform: uppercase;\r\n        font-size: 12px;\r\n        font-weight: 500;\r\n        color: var(--gray);\r\n    }\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n    height: 1px;\r\n    width: 200px;\r\n\r\n    background-color: white;\r\n    opacity: 0.2;\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n    margin-left: 8px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport const AddCategoryIcon = styled(Add)`\r\n    width: 21px;\r\n    height: 21px;\r\n\r\n    color: var(--symbol);\r\n    cursor: pointer;\r\n    transition: 0.2s;\r\n    \r\n    &:hover {\r\n        color: white;\r\n    }\r\n`;\r\n","import React from   'react';\r\nimport ChannelTextButton from '../ChannelTextButton';\r\nimport ChannelVoiceButton from '../ChannelVoiceButton';\r\nimport { Container, Category, Separator, AddCategoryIcon } from './styles';\r\n\r\nexport const ChannelList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n        <Category>\r\n            <span>Canais de texto</span>\r\n            <AddCategoryIcon />\r\n        </Category>\r\n        <ChannelTextButton channelName=\"chat-livre\"/>\r\n        <ChannelTextButton channelName=\"minecraft\"/>\r\n        <ChannelTextButton channelName=\"bot\"/>\r\n        <ChannelTextButton channelName=\"trabalho\"/>\r\n        <ChannelTextButton channelName=\"lol\"/>\r\n        <ChannelTextButton channelName=\"filmin\"/>\r\n        <ChannelTextButton channelName=\"fofocas\"/>\r\n        <Separator />\r\n        <Category>\r\n            <span>Canais de voz</span>\r\n            <AddCategoryIcon />\r\n        </Category>\r\n        <ChannelVoiceButton channelName=\"de bobeira\"/>\r\n        <ChannelVoiceButton channelName=\"filmin\"/>\r\n        <ChannelVoiceButton channelName=\"minecraft\"/>\r\n        <ChannelVoiceButton channelName=\"Tech_Dojo\"/>\r\n        </ Container>\r\n    );\r\n};\r\n\r\nexport default ChannelList;","import styled from \"styled-components\";\r\nimport me from '../../assets/me.jpg';\r\nimport { Mic, Headset, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: UI;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    padding: 10px;\r\n    background-color: var(--quaternary);\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 32px;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n\r\n    background-image: url(${me});\r\n    background-size: cover;\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n        margin-left: 10px;\r\n        >strong {\r\n        font-size: 13px;\r\n        color: white;\r\n        display: block;\r\n    }\r\n\r\n    >span {\r\n        color: var(--gray);\r\n        font-size:13px;\r\n    }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n\r\ndisplay: flex;\r\nalign-items: right;\r\n\r\n>svg:not(:first-child) {\r\n    margin-left: 7px;\r\n}\r\n`;\r\n\r\nexport const MicIcon = styled(Mic)`\r\nheight: 20px;\r\nwidth: 20px;\r\n\r\ncolor: var(--gray);\r\ncursor: pointer;\r\n\r\ntransition: .2s;\r\n\r\n &:hover {\r\n     color: white;\r\n }\r\n`;\r\n\r\nexport const HeadphoneIcon = styled(Headset)`\r\nheight: 20px;\r\nwidth: 20px;\r\n\r\ncolor: var(--gray);\r\ncursor: pointer;\r\n\r\ntransition: .2s;\r\n\r\n &:hover {\r\n     color: white;\r\n }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\nheight: 20px;\r\nwidth: 20px;\r\n\r\ncolor: var(--gray);\r\ncursor: pointer;\r\n\r\ntransition: .2s;\r\n\r\n &:hover {\r\n     color: white;\r\n }\r\n`;","import React from   'react';\r\nimport { Container, Profile, Avatar, UserData, Icons, MicIcon, HeadphoneIcon, SettingsIcon } from './styles';\r\n\r\nexport const UserInfo: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Profile>\r\n                <Avatar />\r\n                <UserData>\r\n                    <strong>Mari Mattos</strong>\r\n                    <span>#7020</span>\r\n                </UserData>\r\n            </Profile>\r\n\r\n            <Icons>\r\n                <MicIcon />\r\n                <HeadphoneIcon />\r\n                <SettingsIcon />\r\n            </Icons>\r\n        </ Container>\r\n    );\r\n};\r\n\r\nexport default UserInfo;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n grid-area: UL;\r\n\r\n display: flex;\r\n flex-direction: column;\r\n \r\n\r\n padding: 3px 6px 0 16px;\r\n\r\n background-color: var(--secondary);\r\n max-height: 100vh;\r\noverflow-y: scroll;\r\n\r\n::-webkit-scrollbar {\r\n    width: 7px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n    background: var(--tertiary);\r\n    border-radius: 4px;\r\n}\r\n::-webkit-scrollbar-track {\r\nbackground-color: var(--secondary);\r\n}\r\n`;\r\nexport const Role = styled.span`\r\ndisplay: flex;\r\nalign-items: left;\r\nmargin-top: 20px;\r\ntext-transform: uppercase;\r\nfont-size: 12px;\r\nfont-weight: 500;\r\n\r\ncolor: var(--gray);\r\n`;\r\nexport const User = styled.div`\r\n margin-top: 5px;\r\n padding: 5px;\r\n\r\n display: flex;\r\n align-items: center;\r\n\r\n cursor: pointer;\r\n\r\n border-radius: 4px;\r\n background: transparent;\r\n transition: .2s;\r\n\r\n &:hover {\r\n    background-color: var(--quinary);\r\n    border-radius: 8px;\r\n }\r\n\r\n >strong {\r\n     margin-left: 13px;\r\n     font-weight: 500;\r\n     color: white;\r\n     opacity: 0.7;\r\n\r\n     white-space: nowrap;\r\n     text-overflow: ellipsis;\r\n     overflow: hidden;\r\n }\r\n >span {\r\n    margin-left: 9px;\r\n    border-radius: 10px;\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n    padding: 4px 5px;\r\n}\r\n >#bot {\r\n     background-color: var(--discord);\r\n     color: white;\r\n  \r\n     border-radius: 4px;\r\n\r\n     text-transform: uppercase;\r\n     font-weight: bold;\r\n     font-size: 11px;\r\n} \r\n>#disponivel {\r\n    background-color: green;\r\n}\r\n>#ocupado {\r\n    background-color: var(--notification);\r\n}\r\n>#ausente {\r\n    background-color: var(--mention-detail);\r\n}\r\n`;\r\nexport const Separator = styled.span`\r\n    height: 2px;\r\n    width: 12px;\r\n    \r\n    align-self: center;\r\n    margin: 0 7px;\r\n\r\n    background-color: var(--quinary);\r\n`;\r\nexport const Avatar = styled.div`\r\nflex-shrink: 0;\r\nwidth: 32px;\r\nheight: 32px;\r\n\r\nborder-radius: 50%;\r\nbackground-color: var(--primary);\r\nbackground-size: cover;\r\n\r\nimg {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n}\r\n\r\n\r\n&.bot {\r\n    background-color: var(--mention-detail);\r\n    }\r\n`;","import React from   'react';\r\nimport { Container, Role, Separator, User, Avatar } from './styles';\r\nimport me from '../../assets/me.jpg';\r\nimport daniel from '../../assets/daniel.jpg';\r\nimport filipez from '../../assets/filipez.jpg';\r\nimport junio from '../../assets/pp.jpg';\r\nimport sasa from '../../assets/sasa.jpg';\r\nimport becca from '../../assets/becca.jpg';\r\nimport jonathas from '../../assets/jonathas.jpg';\r\n\r\nexport interface Props {\r\n    nickname: string;\r\n    isBot ?: boolean;\r\n    isMari?: boolean;\r\n    isDaniel?: boolean;\r\n    isFilipez?: boolean;\r\n    isJunio?: boolean;\r\n    isSasa?: boolean;\r\n    isBecca?: boolean;\r\n    isJonathas?: boolean;\r\n    isOnline?: boolean;\r\n    isOcupado?: boolean;\r\n    isAusente?: boolean;\r\n};\r\n\r\nconst UserRow: React.FC<Props> = ({nickname, isBot, isMari, isDaniel, isFilipez, isJunio, isSasa, isBecca, isJonathas, isOnline, isOcupado, isAusente}) => {\r\n    return (\r\n        <User>\r\n                <Avatar className={isBot ? 'bot' : ''}>\r\n                {isMari && <img src={me} alt=\"Mari\" />}\r\n                {isDaniel && <img src={daniel} alt=\"Daniel\" />}\r\n                {isFilipez && <img src={filipez} alt=\"Filipe\" />}\r\n                {isJunio && <img src={junio} alt=\"Juniro\" />}\r\n                {isSasa && <img src={sasa} alt=\"Sabrina\" />}\r\n                {isBecca && <img src={becca} alt=\"Rebecca\" />}\r\n                {isJonathas && <img src={jonathas} alt=\"Jonathas\" />}\r\n                </Avatar>\r\n            <strong>{nickname}</strong>\r\n            {isBot && <span id=\"bot\">Bot</span>}\r\n            {isOnline && <span id=\"disponivel\"></span>}\r\n            {isOcupado && <span id=\"ocupado\"></span>}\r\n            {isAusente && <span id=\"ausente\"></span>}\r\n        </User>\r\n    );\r\n}\r\n\r\nexport const UserList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n        <Role>Disponível <Separator /> 4</Role>\r\n        <UserRow nickname=\"Mari Mattos\" isMari isOnline></UserRow>\r\n        <UserRow nickname=\"Daniel Luiz\" isDaniel isAusente></UserRow>\r\n        <UserRow nickname=\"Wellington Junior\" isJunio isOcupado></UserRow>\r\n        <UserRow nickname=\"Jonathas Marques\" isJonathas isAusente></UserRow>\r\n        <Role>Offline <Separator /> 18</Role>\r\n        <UserRow nickname=\"Sasa HELEN\" isSasa></UserRow>\r\n        <UserRow nickname=\"Filipez\" isFilipez></UserRow>\r\n        <UserRow nickname=\"Rebeca Fragoso\" isBecca></UserRow>\r\n        <UserRow nickname=\"Player\" isBot></UserRow>\r\n        <UserRow nickname=\"Thiago Pinto\"></UserRow>\r\n        <UserRow nickname=\"Segundinha\"></UserRow>\r\n        <UserRow nickname=\"Eve\"></UserRow>\r\n        <UserRow nickname=\"Joana\"></UserRow>\r\n        <UserRow nickname=\"Berguinha\"></UserRow>\r\n        <UserRow nickname=\"Joey\"></UserRow>\r\n        <UserRow nickname=\"Suzy\"></UserRow>\r\n        <UserRow nickname=\"Ana\"></UserRow>\r\n        <UserRow nickname=\"Kaka\"></UserRow>\r\n        <UserRow nickname=\"Drago\"></UserRow>\r\n        <UserRow nickname=\"Pablo\"></UserRow>\r\n        </ Container>\r\n    );\r\n};\r\n\r\nexport default UserList;","import styled from \"styled-components\";\r\nimport { AlternateEmail } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CD;\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: calc(100vh - 42px -56px );\r\n\r\n    background-color: var(--primary);\r\n`;\r\nexport const Messages = styled.div`\r\n    padding: 20px 0;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 8px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--tertiary);\r\n        border-radius: 4px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background-color: var(--secondary);\r\n    }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n    width: 100%;\r\n    height: 52px;\r\n    background:  var(--secondary);\r\n    padding: 0 8px;\r\n    display: flex;\r\n    align-items: center;   \r\n `;\r\n\r\nexport const Input = styled.input`\r\n    width: 100%;\r\n    height: 40px;\r\n    padding: 0px 10px 0px 37px;\r\n    border-radius: 7px;\r\n    border-color: var(--gray);\r\n    background-color: var(--chat-input);\r\n    position: relative;\r\n    \r\n    color: white;\r\n\r\n    &::placeholder {\r\n        color: var(--gray);\r\n    }\r\n\r\n    ~ svg {\r\n        position: absolute;\r\n        transition: 180ms ease-in-out;\r\n    }\r\n`;\r\n\r\nexport const InputIcon = styled(AlternateEmail)`\r\n    width: 24px;\r\n    height: 24px;\r\n    margin-left: 9px;\r\n    color: var(--gray);\r\n    background-color: var(--chat-input);\r\n    \r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: left;\r\n\r\n    margin-right: 4px;\r\n    padding: 4px 16px;\r\n    background-color: transparent;\r\n\r\n    &.mentionMe {\r\n        background-color: var(--mention-message);\r\n        border-left: 2px solid var(--mention-detail);\r\n        padding-left: 14px;\r\n    }\r\n\r\n    & + div {\r\n        margin-top: 13px;\r\n    }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n    min-width: 40px;\r\n    height: 40px;\r\n\r\n    background-color: var(--secondary);\r\n    border-radius: 50%;\r\n\r\n    &.bot {\r\n        background-color: var(--mention-detail);\r\n    }\r\n    img{\r\n        max-width: 40px;\r\n        border-radius:50%;\r\n    }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n    min-height: 40px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    margin-left: 17px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    >strong {\r\n        color: white;\r\n        font-size: 16px;\r\n    }\r\n\r\n    >span {\r\n        margin-left: 6px;\r\n\r\n        background-color: var(--discord);\r\n        color: var(--white);\r\n        border-radius: 4px;\r\n        padding: 4px 5px;\r\n\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        font-size: 11px; \r\n    }\r\n    >time {\r\n        margin-left: 6px;\r\n        color: var(--gray);\r\n        font-size: 13px;\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    text-align: left;\r\n    font-size: 16px;\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Mention = styled.span`\r\n color: var(--link);\r\n cursor: pointer;\r\n    &:hover{\r\n        text-decoration: underline;\r\n    }\r\n`;","import React from   'react';\r\nimport { Container, Avatar, Message, Header, Content} from './styles';\r\nimport me from '../../assets/me.jpg';\r\nimport daniel from '../../assets/daniel.jpg';\r\nimport filipez from '../../assets/filipez.jpg';\r\nimport junio from '../../assets/pp.jpg';\r\nimport sasa from '../../assets/sasa.jpg';\r\n\r\n\r\nexport interface Props {\r\n    author: string;\r\n    date: string;\r\n    content: string | React.ReactElement | React.ReactNode;\r\n    hasMentionMe?: boolean;\r\n    hasMention?: boolean;\r\n    isBot?: boolean;\r\n    isMari?: boolean;\r\n    isDaniel?: boolean;\r\n    isFilipez?: boolean;\r\n    isJunio?: boolean;\r\n    isSasa?: boolean;\r\n}\r\n\r\nexport const ChannelMessage: React.FC<Props> = ({\r\n    author,\r\n    date,\r\n    content,\r\n    hasMentionMe,\r\n    hasMention,\r\n    isBot,\r\n    isMari,\r\n    isDaniel,\r\n    isFilipez,\r\n    isJunio,\r\n    isSasa\r\n}) => {\r\n    return (\r\n        <Container className={hasMentionMe ? 'mentionMe' : ''}>\r\n            <Avatar \r\n                className={isBot ? 'bot' : ''}>\r\n                {isMari && <img src={me} alt=\"Mari\" />}\r\n                {isDaniel && <img src={daniel} alt=\"Daniel\" />}\r\n                {isFilipez && <img src={filipez} alt=\"Filipe\" />}\r\n                {isJunio && <img src={junio} alt=\"Juniro\" />}\r\n                {isSasa && <img src={sasa} alt=\"Sabrina\" />}\r\n            </ Avatar>\r\n            <Message>\r\n                <Header>\r\n                <strong>{author}</strong>\r\n                {isBot && <span>Bot</span>}\r\n                <time>{date}</time>\r\n                </Header>\r\n                <Content> {content} </Content>\r\n            </Message>\r\n        </ Container>\r\n    );\r\n};\r\n\r\nexport default ChannelMessage;","import React from   'react';\r\nimport { Container, Messages, InputWrapper, Input, InputIcon } from './styles';\r\nimport ChannelMessage from '../ChannelMessage';\r\nimport { Mention } from '../ChannelMessage/styles';\r\n\r\nexport const ChannelData: React.FC = () => {\r\n    return (\r\n<Container>\r\n    <Messages>\r\n        <ChannelMessage\r\n        author= \"Mari Mattos\"\r\n        date=\"02/07/2020\"\r\n        content=\"Hoje é meu dia, rapaziada!\"\r\n        isMari\r\n        />\r\n        <ChannelMessage\r\n        author= \"Daniel Luis\"\r\n        date=\"02/07/2020\"\r\n        content={ <>Koe,\r\n        <Mention> Mari Mattos</Mention>, parabéns!\r\n        </>}\r\n        hasMentionMe\r\n        isDaniel\r\n        />\r\n        <ChannelMessage\r\n        author= \"Filipez\"\r\n        date=\"02/07/2020\"\r\n        content=\"Parabéns, Mari!\"\r\n        isFilipez/>\r\n        <ChannelMessage\r\n        author= \"Wellington Junior\"\r\n        date=\"02/07/2020\"\r\n        content={ <>\r\n        <Mention>Mari Mattos</Mention>, bora codar pra comemorar, te envio um lanche\r\n        </>}\r\n        hasMentionMe\r\n        isJunio\r\n        />\r\n        <ChannelMessage\r\n        author= \"Filipez\"\r\n        date=\"02/07/2020\"\r\n        content=\"Quê isso, quero lanche também\"\r\n        isFilipez/>\r\n        <ChannelMessage\r\n        author= \"Mari Mattos\"\r\n        date=\"02/07/2020\"\r\n        content=\"Juniô vai bancá geral!!\"\r\n        isMari/>\r\n        <ChannelMessage\r\n        author= \"Mari Mattos\"\r\n        date=\"02/07/2020\"\r\n        content=\"!p parabéns pra você xuxa\"\r\n        isMari/>\r\n        <ChannelMessage\r\n        author= \"Player\"\r\n        date=\"02/07/2020\"\r\n        content={ <>Now playing\r\n        <Mention> Looping Parabéns - Xuxa YOUTUBE VIDEO</Mention>\r\n        </>}\r\n        isBot\r\n        hasMention\r\n        />\r\n        <ChannelMessage\r\n        author= \"Daniel Luis\"\r\n        date=\"02/07/2020\"\r\n        content=\"Qual foi, Mari, looping não tem como\"\r\n        isDaniel\r\n        />\r\n        <ChannelMessage\r\n        author= \"Mari Mattos\"\r\n        date=\"02/07/2020\"\r\n        content= \"Tá, tá mas... Cadê meu bolo de aniversário?\"\r\n        isMari/>\r\n        <ChannelMessage\r\n        author= \"Sasa HELEN\"\r\n        date=\"02/07/2020\"\r\n        content=\"Parabéns Mariii! Cola aqui no canal, bora fazer alguma coisa\"\r\n        isSasa/>\r\n        <ChannelMessage\r\n        author= \"Mari Mattos\"\r\n        date=\"02/07/2020\"\r\n        content={ <>\r\n        <Mention>Sasa HELEN</Mention> claroo, bora de filimin!\r\n        </>}\r\n        hasMention\r\n        isMari\r\n        />\r\n    </Messages>\r\n    <InputWrapper>\r\n    <Input type=\"text\" placeholder=\"Digite sua mensagem\">\r\n    </Input>\r\n    <InputIcon />\r\n    </InputWrapper>\r\n</Container>\r\n    );\r\n};\r\n\r\nexport default ChannelData;","import styled from \"styled-components\";\r\n\r\n//SL = SERVER LIST\r\n//SN = SERVER NAME\r\n//CI = CHANNEL INFO\r\n//CL = CHANNEL LIST\r\n//CD = CHANNEL DATE\r\n//UL = USER LIST\r\n//UI = USER INFO\r\n\r\nexport const Grid = styled.div`\r\n    display: grid;\r\n    height: 100vh;\r\n    \r\n    grid-template-columns: 71px 240px auto 240px;\r\n    grid-template-rows: 46px auto 52px;\r\n\r\n    grid-template-areas:\r\n        'SL SN CI CI'\r\n        'SL CL CD UL'\r\n        'SL UI CD UL';\r\n`;\r\n\r\n","import React from   'react';\r\nimport ServerName from '../ServerName';\r\nimport ServerList from '../ServerList';\r\nimport ChannelInfo from '../ChannelInfo';\r\nimport ChannelList from '../ChannelList';\r\nimport UserInfo from '../UserInfo';\r\nimport UserList from '../UserList';\r\nimport ChannelData from '../ChannelData';\r\nimport { Grid } from './styles';\r\n\r\nconst Layout: React.FC = () => {\r\n    return (\r\n        <Grid>\r\n        <ServerList />\r\n        <ServerName />\r\n        <ChannelInfo />\r\n        <ChannelList />\r\n        <UserInfo />\r\n        <ChannelData />\r\n        <UserList />\r\n        </ Grid>\r\n    );\r\n};\r\n\r\nexport default Layout;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html, body, #root {\r\n        height: 100%;\r\n    }\r\n\r\n    *, button, input {\r\n        border: 0;\r\n        outline: 0;\r\n        font-family: Roboto, sans-serif;\r\n    }\r\n\r\n    :root {\r\n    --primary: #36393f;\r\n    --secondary: #2f3136;\r\n    --tertiary: rgb(32,34,37);\r\n    --quaternary: #292b2f;\r\n    --quinary: #393d42;\r\n    --senary: #828386;\r\n   \r\n    --white: #fff;\r\n    --gray: #8a8c90;\r\n    --chat-input: rgb(64,68,75);\r\n    --symbol: #74777a;\r\n \r\n    --notification: #f84a4b;\r\n    --discord: #6e86d6;\r\n    --mention-detail: #f9a839;\r\n    --mention-message: #413f3f;\r\n \r\n    --link: #5d80d6;\r\n \r\n    --rocketseat: #6633cc;\r\n    }\r\n`;","import React from 'react';\nimport Layout from './components/Layout';\nimport GlobalStyles from './styles/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Layout />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}